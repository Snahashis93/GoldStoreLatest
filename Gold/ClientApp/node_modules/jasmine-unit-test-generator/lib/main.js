"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const ts = require("typescript");
const parse_source_file_1 = require("./parse-source-file");
const generate_unit_test_1 = require("./generate-unit-test");
const default_dependency_handler_1 = require("./default-dependency-handler");
function run(params) {
    if (!params.length) {
        // tslint:disable-next-line:no-console
        console.error('missing path argument');
        process.exit(1);
    }
    if (params.length > 1 && params[0].indexOf('--require') === 0) {
        require(params[1]);
        params = params.slice(2);
    }
    const handlers = [];
    if (params.length > 1 && params[0].indexOf('--handlers') === 0) {
        const files = fs_1.readdirSync(params[1]);
        files.forEach((file) => {
            const value = require(process.cwd() + '/' + params[1] + '/' + file);
            handlers.push(value.default || value);
        });
        params = params.slice(2);
    }
    handlers.push(default_dependency_handler_1.default);
    const path = params[0];
    const specPath = path.substring(0, path.length - 2) + 'spec.ts';
    const sourceCode = fs_1.readFileSync(path).toString();
    const sourceFile = ts.createSourceFile(path, sourceCode, ts.ScriptTarget.Latest, 
    /*setParentNodes */ true);
    const input = parse_source_file_1.parseSourceFile(sourceFile);
    const output = generate_unit_test_1.generateUnitTest(path, sourceCode, input, handlers);
    fs_1.writeFileSync(specPath, output);
}
exports.run = run;
